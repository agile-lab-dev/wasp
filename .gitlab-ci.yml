image: alpine

variables:
  SBT_VERSION: "1.2.8"
  SBT_OPTS: "-Xmx2G -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=2G -Xss2M  -Duser.timezone=GMT -Dsbt.global.base=sbt-cache/sbtboot -Dsbt.boot.directory=sbt-cache/boot -Dsbt.ivy.home=sbt-cache/ivy"
  COURSIER_CACHE: sbt-cache/coursier
  UNPRIVILEGED_USER: "tester"

stages:
  - censor # first censor cause it's faster
  - waspctl
  - test
  - integration
  - deploy
  

cache:
  key: "mycachekey"
  paths:
    - "sbt-cache/ivy/cache"
    - "sbt-cache/boot"
    - "sbt-cache/sbtboot"
    - "sbt-cache/target"
    - "sbt-cache/coursier"

test:
  stage: test
  interruptible: true
  image: "hseeberger/scala-sbt:8u181_2.12.8_1.2.8"
  script:
    - ./run-sbt-unprivileged.sh "clean coverageOn test coverageOff coverageReport coverageAggregate"
  only:
    - /^develop$/
    - /(^release\/v([0-9]+)\.([0-9]+))/
    - merge_requests

censor:
  stage: censor
  interruptible: true
  image: "registry.gitlab.com/agilefactory/developers/censor:0.1.0"
  only: [merge_requests]
  script:
    - ./censor.sh
    

integration:
  interruptible: true
  stage: integration
  image: "hseeberger/scala-sbt:8u181_2.12.8_1.2.8"
  script:
    - sbt clean it:test
  only:
    - /(^release\/v([0-9]+)\.([0-9]+))/

waspctl:
  interruptible: true
  stage: deploy
  image: "registry.gitlab.com/agilefactory/agile.wasp2/waspctl-build:0.1.0"
  script:
    - bash waspctl/build-for-all-archs.bash
  artifacts:
    paths: ['waspctl/output']
  only:
    - /^develop$/
    - /(^release\/v([0-9]+)\.([0-9]+))/
    - merge_requests
    - tags

deploy:
  interruptible: false
  stage: deploy
  image: "hseeberger/scala-sbt:8u181_2.12.8_1.2.8"
  script:
    - sbt clean publishSigned
  only:
    - /^develop$/
    - /(^release\/v([0-9]+)\.([0-9]+))/
    - merge_requests

deploy:
  interruptible: false
  stage: deploy
  image: "hseeberger/scala-sbt:8u181_2.12.8_1.2.8"
  script:
    - "mkdir -p $HOME/.sbt/gpg"
    - "echo $GPG_PUB | base64 -d > $HOME/.sbt/gpg/pubring.asc"
    - "echo $GPG_PRIV | base64 -d >  $HOME/.sbt/gpg/secring.asc"
    - "export GPG_PASSPHRASE=`echo $GPG_PASSPHRASE_BASE64 | base64 -d`"
    - sbt clean publishSigned sonatypeRelease
  only:
    - tags   
