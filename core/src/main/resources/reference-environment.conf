# This file includes defaults for environment configuration, mostly external services.
wasp {
  mongo {
    address = "localhost:27017"
    db-name = "wasp"
    timeout = ${default.timeout-services}
  }

  kafka {
    connections = [
      {
        protocol = ""
        host = "localhost"
        port = 9092
        timeout = ${default.timeout-services}
      }
    ]
    ingest-rate = "1s"
    zookeeper = {
      protocol = ""
      host = "localhost"
      port = 2181
      timeout = ${default.timeout-services}
    }
    broker-id = 0
    partitioner-fqcn = "kafka.producer.DefaultPartitioner"
    default-encoder = "kafka.serializer.DefaultEncoder"
    encoder-fqcn = "kafka.serializer.StringEncoder"
    decoder-fqcn = "kafka.serializer.StringDecoder"
    batch-send-size = 0
  }

  spark-streaming {
    app-name = "WASP-streaming"
    master = {
      protocol = ""
      host = "local[*]"
      port = 0
    }
    driver-cores = 4
    driver-memory = "2G"
    driver-hostname = "localhost"
    driver-port = 0
    executor-cores = "4"
    executor-memory = "2G"
    executor-instances = "1"
    yarn-jar = "./spark-lib/spark-assembly.jar"
    block-manager-port = 0
    broadcast-port = 0
    fileserver-port = 0
    streaming-batch-interval-ms = 1000
    checkpoint-dir = "./tmp"
  }

  spark-batch {
    app-name = "WASP-batch"
    master = {
      protocol = ""
      host = "local[*]"
      port = 0
    }
    driver-cores = "4"
    driver-memory = "2G"
    driver-hostname = "localhost"
    driver-port = 0
    executor-cores = "4"
    executor-memory = "2G"
    executor-instances = "1"
    yarn-jar = "./spark-lib/spark-assembly.jar"
    block-manager-port = 0
    broadcast-port = 0
    fileserver-port = 0
  }

  elastic {
    connections = [
      {
        protocol = ""
        host = "localhost"
        port = 9300
        timeout = ${default.timeout-services},
        metadata: [
          {"connectiontype": "binary"}
        ]
      },
      {
        protocol = ""
        host = "localhost"
        port = 9200
        timeout = ${default.timeout-services},
        metadata: [
          {"connectiontype": "rest"}
        ]
      }
    ]
    cluster-name = "elasticsearch"
  }

  solrcloud {
    connections: [
      {
        protocol: "",
        host: "localhost",
        port: 9983,
        metadata: [
          {"zookeeperRootNode": ""}
        ]
      }
    ],
    name: "Solr",
    cluster_name: "wasp",
    apiEndPoint: {
      protocol: "http",
      host: "localhost",
      port: 8983,
      metadata: [
        {"zookeeperRootNode": "/solr"}
      ]
    }
  }
}